---
import Header from "../../components/Header.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post) => ({
    params: { slug: post.slug },
  }));
}

const { slug } = Astro.params;
if (!slug) {
  throw new Error("Missing slug parameter");
}

const posts = await getCollection("posts");
const post = posts.find((entry) => entry.slug === slug) as CollectionEntry<"posts"> | undefined;

if (!post) {
  throw new Error(`Post not found for slug: ${slug}`);
}

const { Content } = await post.render();
---

<!DOCTYPE html>
<html lang="en">
  <Header title={`${post.data.title} | Blog`} />
  <body class="bg-[#FFF8F0] text-gray-900">
    <div class="max-w-4xl mx-auto px-6 py-12">
      
      <!-- Back Button -->
      <a href="/blog" class="inline-flex items-center gap-2 mb-8 px-4 py-2 bg-white border-3 border-black hover:shadow-[4px_4px_0px_0px_rgba(0,0,0,1)] hover:-translate-y-1 transition-all">
        <span class="text-xl">←</span>
        <span class="font-bold">Back to Blog</span>
      </a>

      <!-- Article Header -->
      <article class="bg-white border-3 border-black p-8 md:p-12 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)]">
        
        {post.data.image && (
          <div class="mb-8 -mx-8 md:-mx-12 -mt-8 md:-mt-12">
            <img src={post.data.image} alt={post.data.title} class="w-full h-64 md:h-96 object-cover border-b-3 border-black" />
          </div>
        )}

        <div class="mb-6">
          {post.data.tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mb-4">
              {post.data.tags.map((tag) => (
                <span class="px-3 py-1 bg-[#E8DFF5] border-2 border-black text-xs font-semibold rounded-full">
                  #{tag}
                </span>
              ))}
            </div>
          )}
          
          <h1 class="text-4xl md:text-5xl font-bold mb-4">{post.data.title}</h1>
          
          <div class="flex items-center gap-4 text-gray-600">
            <span>•</span>
            <span>{post.data.author}</span>
          </div>
        </div>

        <div class="prose prose-lg max-w-none markdown-content">
          <Content />
        </div>
      </article>

    </div>

    <style>
      .border-3 {
        border-width: 3px;
      }

      .markdown-content {
        color: #1a1a1a;
      }

      .markdown-content h2,
      .markdown-content h3,
      .markdown-content h4 {
        font-family: 'IBM Plex Sans', sans-serif;
        font-weight: 700;
        color: #111111;
      }

      .markdown-content h2 {
        font-size: clamp(2rem, 4vw, 2.5rem);
        margin-top: 2.5rem;
        margin-bottom: 1.25rem;
        border-bottom: 3px solid #000;
        padding-bottom: 0.75rem;
      }

      .markdown-content h3 {
        font-size: clamp(1.6rem, 3vw, 2rem);
        margin-top: 2rem;
        margin-bottom: 1rem;
      }

      .markdown-content h4 {
        font-size: clamp(1.3rem, 2.5vw, 1.6rem);
        margin-top: 1.75rem;
        margin-bottom: 0.75rem;
      }

      .markdown-content p {
        margin-bottom: 1.5rem;
        line-height: 1.8;
        color: #2c2c2c;
      }

      .markdown-content a {
        color: #c678dd;
        font-weight: 600;
        text-decoration: underline;
        text-decoration-thickness: 2px;
        text-decoration-color: rgba(198, 120, 221, 0.4);
        transition: color 0.2s ease, text-decoration-color 0.2s ease;
      }

      .markdown-content a:hover {
        color: #a855f7;
        text-decoration-color: #a855f7;
      }

      .markdown-content code {
        background: #1f2229;
        color: #98c379;
        padding: 0.25rem 0.45rem;
        border-radius: 0.35rem;
        font-family: 'IBM Plex Mono', monospace;
        font-size: 0.95em;
        border: 2px solid #000;
      }

      .markdown-content pre {
        background: #1f2229;
        color: #e5eaf1;
        border: 3px solid #000;
        padding: 1.25rem;
        margin: 2rem 0;
        border-radius: 0.75rem;
        box-shadow: 8px 8px 0px 0px rgba(0, 0, 0, 1);
        overflow-x: auto;
      }

      .markdown-content pre code {
        background: transparent;
        color: inherit;
        padding: 0;
        border: none;
      }

      .markdown-content ul,
      .markdown-content ol {
        margin-left: 1.75rem;
        margin-bottom: 1.5rem;
        display: grid;
        gap: 0.75rem;
      }

      .markdown-content ul li::marker {
        color: #a855f7;
        font-weight: 700;
      }

      .markdown-content ol li::marker {
        color: #4c1d95;
        font-weight: 700;
      }

      .markdown-content blockquote {
        border-left: 4px solid #a855f7;
        padding-left: 1.25rem;
        margin: 2rem 0;
        font-style: italic;
        color: #4b5563;
        background: rgba(168, 85, 247, 0.08);
        border-radius: 0.5rem;
      }

      .markdown-content img,
      .markdown-content video {
        border: 3px solid #000;
        margin: 2rem 0;
        border-radius: 1rem;
        box-shadow: 8px 8px 0px 0px rgba(0, 0, 0, 1);
      }

      .markdown-content hr {
        border: none;
        border-top: 3px dashed #000;
        margin: 2.5rem 0;
      }

      .markdown-content table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        margin: 2rem 0;
        background: #fff;
        border: 3px solid #000;
        border-radius: 0.75rem;
        overflow: hidden;
      }

      .markdown-content th,
      .markdown-content td {
        padding: 1rem 1.25rem;
        border-bottom: 2px solid #000;
      }

      .markdown-content th {
        background: #111;
        color: #fff;
        text-align: left;
        font-weight: 700;
      }

      .markdown-content tbody tr:nth-child(even) {
        background: rgba(0, 0, 0, 0.04);
      }

      .markdown-content strong {
        color: #000;
      }

      .markdown-content em {
        color: #4c1d95;
      }
